//Timer t is used to sample the temperature, change the first parameter of the function t.every() in line 16, 
//one can change the sampling rate. The current setting is 1 second
//To avoid heating up, the sensor is powered by a digital pin 11, it will only be output during the sampling period(interrupt) and keep 
//inactive during the rest of time.

#include <Timer.h>
Timer t;
int temperature = A3;
int power = 11;

double buffer[8] = {0, 0, 0, 0, 0, 0, 0, 0};


void setup() {
Serial.begin(9600);         //setup serial
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
pinMode(power, INPUT);      //turn off the power
t.every(1000, takeReading); //every second read the temperature once
}

void loop() {

  t.update();
}



float calculateR(double value)
{
  float resistance = 10000*value/(1023-value);
  return resistance;
  }

float calculateT(float resistor)
{
  float temp = log(resistor/10000);
  temp = temp/3435;
  temp = temp + 1/(25+273.15);
  temp = 1/temp;
  temp = temp-273.15;
  return temp;
  }

void takeReading()
{
  pinMode(power, OUTPUT);                   //turn on the power
  delay(100);                               //make the voltage stable

  for(int i = 0; i<8; i++)
  {
    buffer[i] = analogRead(temperature);    //sample the temperature
    delay(10);
    }

  pinMode(power, INPUT);                    //turn off the power
  
  float avg = 0;
  float r = 0;
  
  //calculate the temperature and store it back in the buffer
    for(int i = 0; i<8; i++)
  {
    buffer[i] = calculateT(calculateR(buffer[i]));
    }

 for(int i = 0; i<8; i++)
  {
    avg = avg + buffer[i];
    }

    avg = avg/8;
    
Serial.print("Temperature is ");
Serial.print(avg);
Serial.println("Â°C");
}
