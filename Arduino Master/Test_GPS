
// Xode for the Arduino 

#include <TinyGPS++.h>
#include <SoftwareSerial.h>

static const int RXPin_GPS = 4, TXPin_GPS = 3;
static const int RXPin_COM = 4, TXPin_COM = 3;

TinyGPSPlus gps;
SoftwareSerial serial_GPS(RXPin_GPS, TXPin_GPS);
SoftwareSerial serial_COM(RXPin_COM, TXPin_COM);

void setup()
{
  Serial.begin(9600);             // the Serial port of Arduino baud rate.
  serial_GPS.begin(9600);               // the SoftSerial baud rate  
  serial_COM.begin(9600);
}
 
void loop()
{
  // This sketch displays information every time a new sentence is correctly encoded.
  while (serial_GPS.available() > 0)
    if (gps.encode(serial_GPS.read()))
      displayInfo();

  if (millis() > 5000 && gps.charsProcessed() < 10)
  {
    Serial.println(F("No GPS detected: check wiring."));
    while(true);
  }
}

void displayInfo()
{
  // Read one GPS measurement
  Serial.print(F("Location: ")); 
  if (gps.location.isValid())
  {
    Serial.print(gps.location.lat(), 6);
    Serial.print(F(","));
    Serial.print(gps.location.lng(), 6);
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.print(F("  Date/Time: "));
  if (gps.date.isValid())
  {
    Serial.print(gps.date.month());
    Serial.print(F("/"));
    Serial.print(gps.date.day());
    Serial.print(F("/"));
    Serial.print(gps.date.year());
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.print(F(" "));
  if (gps.time.isValid())
  {
    if (gps.time.hour() < 10) Serial.print(F("0"));
    Serial.print(gps.time.hour());
    Serial.print(F(":"));
    if (gps.time.minute() < 10) Serial.print(F("0"));
    Serial.print(gps.time.minute());
    Serial.print(F(":"));
    if (gps.time.second() < 10) Serial.print(F("0"));
    Serial.print(gps.time.second());
    Serial.print(F("."));
    if (gps.time.centisecond() < 10) Serial.print(F("0"));
    Serial.print(gps.time.centisecond());
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.println();
}
